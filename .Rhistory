} else {
SpecimenMessage <- paste("For the", Ref.IDs[dd], "specimen", sep=" ")
}
WarningMessage <- paste(SpecimenMessage, "The resolution used for identifying a region of identification is too low to plot a polygon of the likely region of origin. Therefore, the grid squares that were identified by the r threshold as a possible region of origin have been highlighted. Please set the R.Samp argument to a higher value if a polygon of the most likely region of origin is desired.")
warning(WarningMessage)
graphics::points(x = as.character(ApproxOrigin$Long)[1], y = as.character(ApproxOrigin$Lat)[1], pch=21, bg=transpar(Colour ='gold', alpha = dim(Ref.Dist.mat)[1]/10),  cex=dim(ApproxOrigin)[1])
graphics::points(x = as.character(ApproxOrigin$Long), y = as.character(ApproxOrigin$Lat), pch=21, bg=transpar(Colour ='gold', alpha = dim(Ref.Dist.mat)[1]/10),  cex=dim(ApproxOrigin)[1])
} else {
contour.95 <-  Construct_contour(ApproxOrigin[,1:2])
#polygon(contour.95$x, contour.95$y, col=transpar(Colour ='gold', alpha = dim(Ref.Dist.mat)[1]/10), border='black', lwd=1)
EstimatedPol <-  sp::Polygon(cbind(contour.95$x, contour.95$y))
EstimatedPols <-  sp::Polygons(list(EstimatedPol),1)
EstSpatPol <-  sp::SpatialPolygons(list(EstimatedPols))
#plot(DistSpatPol)
#plot(EstSpatPol, add=TRUE)
sp::proj4string(EstSpatPol) <- "+proj=longlat +ellps=WGS84"
EstDist <- raster::intersect(EstSpatPol, DistSpatPol)
}
if (is.null(EstDist)){
NarrowedRanges <- c(0, 0.00001) ###### check for better resolution, fails when resolution not high enough to put identification area within ref distribution area
} else if (attr(class(EstDist), "package")!='sp'){
NarrowedRanges <- c(0, 0.00001)
} else {
EstDist$area <- raster::area(EstDist)
NarrowedRanges <- c(EstDist$area/DistSpatPol$area, EstDist$area)
}
} else {
NarrowedRanges <- c(1, DistSpatPol$area)
}
IdentificationRange[dd,] <- c(as.character(Ref.IDs[dd]),NarrowedRanges)
if (DataDump==TRUE){
filename <- paste(DataDumpPath, "DataDump.csv", sep="")
utils::write.csv(IdentificationRange, filename)
}
}
NEFtR.Samp <- c(5)
NEFt.Boundaryfinding <- BoundaryFinder(Lat.Longs = NEFtInfo[,2:3], Ref.Dist.mat = NEDisMat, DataDump = FALSE, LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`,Ref.IDs = NEFtInfo$ID)
NEFtR.Samp <- c(15)
NEFt.MidRes.Boundaryfinding <- BoundaryFinder(Lat.Longs = NEFtInfo[,2:3], Ref.Dist.mat = NEDisMat, DataDump = FALSE, LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`,Ref.IDs = NEFtInfo$ID)
NEFtR.Samp <- c(30)
NEFt.HiRes.Boundaryfinding <- BoundaryFinder(Lat.Longs = NEFtInfo[,2:3], Ref.Dist.mat = NEDisMat, DataDump = FALSE, LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`,Ref.IDs = NEFtInfo$ID)
library(GeoOrigins)
library(GeoOrigins)
devtools::document()
devtools::load_all()
library(GeoOrigins)
library(GeoOrigins)
library(GeoOrigins)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
colnames(RatDistMat) <- rownames(RatDistMat) <- rownames(Rpraetor$Lat.Long)
rThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
Range.Exp <- .5
Long.Range <- c(floor(min(Rpraetor$Lat.Long$Long))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Long)+Range.Exp))
Lat.Range <- c(floor(min(Rpraetor$Lat.Long$Lat))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Lat)+Range.Exp))
R.Samp <- c(20, 50)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
RpraetorDataMat <- Array2Mat(Rpraetor$LMs)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE)
R.Samp <- c(20, 10)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(20, 10)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(10, 30)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(11, 32)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 33)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 35)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 37)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 38)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 40)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 41)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
R.Samp <- c(12, 42)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
RpraetorDataMat <- Array2Mat(Rpraetor$LMs)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE)
hist(as.numeric(Boundaryfinding$ProvenanceRange[,2]), breaks=10, xlab = "percentage of distribution returned")
PlotBoundaries(plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, DataDump = FALSE, RawCorArray = Boundaryfinding$RawCorData, plotLong = colnames(Boundaryfinding$RawCorData), plotLat = rownames(Boundaryfinding$RawCorData), Lat.Longs = Rpraetor$Lat.Long, TileSize = 1, BoundaryHue = c(1,1))
PlotBoundaries(plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, DataDump = FALSE, RawCorArray = Boundaryfinding$RawCorData, plotLong = colnames(Boundaryfinding$RawCorData), plotLat = rownames(Boundaryfinding$RawCorData), Lat.Longs = Rpraetor$Lat.Long, TileSize = 2, BoundaryHue = c(0.5,1))
MarvalisrThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Marvalis$Info[,3:4], Dist.data.mat = Marvalis$Proc.Dist, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
MarvalisrThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Marvalis$Info[,3:4], Dist.data.mat = Marvalis$Proc.Dist, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
PlotBoundaries(plot.Val.cor = MarvalisrThres$`Provenancing.Correlation.95%.Confidence`, DataDump = FALSE, RawCorArray = Marvalis$Total.Boundary$RawCorData, plotLong = colnames(Marvalis$Total.Boundary$RawCorData), plotLat = rownames(Marvalis$Total.Boundary$RawCorData), Lat.Longs = Marvalis$Info[,3:4], TileSize = 2.5, BoundaryHue = c(0.5,1))
OrkneySpecimens <- which(Marvalis$Info$Geographic.Division=='Orkney Is.')
OrkMarvalisrThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Marvalis$Info[OrkneySpecimens,3:4], Dist.data.mat = Marvalis$Proc.Dist[OrkneySpecimens,OrkneySpecimens], verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
PlotBoundaries(plot.Val.cor = OrkMarvalisrThres$`Provenancing.Correlation.95%.Confidence`, DataDump = FALSE, RawCorArray = Marvalis$Orkney.Boundary$RawCorData, plotLong = colnames(Marvalis$Orkney.Boundary$RawCorData), plotLat = rownames(Marvalis$Orkney.Boundary$RawCorData), Lat.Longs = Marvalis$Info[OrkneySpecimens,3:4], TileSize = 2.1, BoundaryHue = c(0.5,1))
FteydeaThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Fteydea$Info[,2:3], Dist.data.mat = Fteydea$SongDisMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
PlotBoundaries(plot.Val.cor = FteydeaThres$`Provenancing.Correlation.95%.Confidence`, DataDump = FALSE, RawCorArray = Fteydea$Total.Boundary$RawCorData, plotLong = colnames(Fteydea$Total.Boundary$RawCorData), plotLat = rownames(Fteydea$Total.Boundary$RawCorData), Lat.Longs = Fteydea$Info[,2:3], TileSize = 2.5, BoundaryHue = c(0.5,1))
LogFteydeaDisMat <- log(Fteydea$SongDisMat)
LogFteydeaDisMat[which(is.infinite(LogFteydeaDisMat))] <- 0
#To select the NE sub region we can select all specimens with a Latitude value over 28.4
NE <- which(Fteydea$Info$Lat>28.4)
NEFtInfo <- Fteydea$Info[NE,]
NEDisMat <- LogFteydeaDisMat[NE,NE]
NEFtrThres <- IDbyDistance.DistInput.CCV(Lat.Longs = NEFtInfo[,2:3], Dist.data.mat = NEDisMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
Long.Range.Exp <- .005
Lat.Range.Exp <- .001
NEFt.Long.Range <- c(min(NEFtInfo$Long)-Long.Range.Exp, max(NEFtInfo$Long)+Long.Range.Exp)
NEFt.Lat.Range <- c(min(NEFtInfo$Lat)-Lat.Range.Exp, max(NEFtInfo$Lat)+Lat.Range.Exp)
NEFtR.Samp <- c(5)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = NEFtInfo$Long[1], y=NEFtInfo$Lat[1], col='blue', pch=16)
NEFtR.Samp <- c(15)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = NEFtInfo$Long[1], y=NEFtInfo$Lat[1], col='blue', pch=16)
NEFtR.Samp <- c(15)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
``` {r}
NEFtR.Samp <- c(15)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = NEFtInfo$Long[1], y=NEFtInfo$Lat[1], col='blue', pch=16)
NEFtR.Samp <- c(25)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = NEFtInfo$Long[1], y=NEFtInfo$Lat[1], col='blue', pch=16)
NEFtR.Samp <- c(45)
IDbyDistance.DistInput(Lat.Longs = NEFtInfo[-1,2:3], Dist.data.vec = NEDisMat[-1,1], LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = NEFtInfo$Long[1], y=NEFtInfo$Lat[1], col='blue', pch=16)
NEFtR.Samp <- c(5)
NEFtR.Samp <- c(5)
NEFt.Boundaryfinding <- BoundaryFinder(Lat.Longs = NEFtInfo[,2:3], Ref.Dist.mat = NEDisMat, DataDump = FALSE, LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`,Ref.IDs = NEFtInfo$ID)
NEFtR.Samp <- c(15)
NEFt.MidRes.Boundaryfinding <- BoundaryFinder(Lat.Longs = NEFtInfo[,2:3], Ref.Dist.mat = NEDisMat, DataDump = FALSE, LongRange = NEFt.Long.Range, LatRange = NEFt.Lat.Range, Range.Samp = NEFtR.Samp, plot.Val.cor = NEFtrThres$`Provenancing.Correlation.95%.Confidence`,Ref.IDs = NEFtInfo$ID)
library(GeoOrigins)
library(GeoOrigins)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
colnames(RatDistMat) <- rownames(RatDistMat) <- rownames(Rpraetor$Lat.Long)
rThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
Range.Exp <- .5
Long.Range <- c(floor(min(Rpraetor$Lat.Long$Long))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Long)+Range.Exp))
Lat.Range <- c(floor(min(Rpraetor$Lat.Long$Lat))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Lat)+Range.Exp))
R.Samp <- c(12, 42)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
RpraetorDataMat <- Array2Mat(Rpraetor$LMs)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE)
devtools::load_all()
devtools::document()
devtools::load_all()
library(GeoOrigins)
library(GeoOrigins)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE, ignore.prompts = TRUE)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
colnames(RatDistMat) <- rownames(RatDistMat) <- rownames(Rpraetor$Lat.Long)
rThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
Range.Exp <- .5
Long.Range <- c(floor(min(Rpraetor$Lat.Long$Long))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Long)+Range.Exp))
Lat.Range <- c(floor(min(Rpraetor$Lat.Long$Lat))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Lat)+Range.Exp))
R.Samp <- c(12, 42)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
RpraetorDataMat <- Array2Mat(Rpraetor$LMs)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE, ignore.prompts = TRUE)
devtools::load_all()
devtools::document()
devtools::load_all()
library(GeoOrigins)
library(GeoOrigins)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
colnames(RatDistMat) <- rownames(RatDistMat) <- rownames(Rpraetor$Lat.Long)
rThres <- IDbyDistance.DistInput.CCV(Lat.Longs = Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95, print.prog = FALSE)
Range.Exp <- .5
Long.Range <- c(floor(min(Rpraetor$Lat.Long$Long))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Long)+Range.Exp))
Lat.Range <- c(floor(min(Rpraetor$Lat.Long$Lat))-Range.Exp,ceiling(max(Rpraetor$Lat.Long$Lat)+Range.Exp))
R.Samp <- c(12, 42)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-1,], Dist.data.vec = RatDistMat[-1,1], LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
RpraetorDataMat <- Array2Mat(Rpraetor$LMs)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
IDbyDistance.RawData(Lat.Longs = Rpraetor$Lat.Long[-1,], Target.data = RpraetorDataMat[1,], Ref.data = RpraetorDataMat[-1,], Shape.Data = TRUE, Shape.dim = 2, DistMethod = "Proc", LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, verbose = FALSE, Validate = FALSE, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, plot.Prov = TRUE)
points(x = Rpraetor$Lat.Long$Long[1], y=Rpraetor$Lat.Long$Lat[1], col='blue', pch=16)
Boundaryfinding <- BoundaryFinder(Lat.Longs = Rpraetor$Lat.Long, Ref.Dist.mat = RatDistMat, LongRange = Long.Range, LatRange = Lat.Range, Range.Samp = R.Samp, plot.Val.cor = rThres$`Provenancing.Correlation.95%.Confidence`, Expand.map = c(0,0), Ref.IDs = rownames(Rpraetor$Lat.Long), DataDump = FALSE, ignore.prompts = TRUE)
devtools::check()
install.packages("qpdf")
devtools::load_all()
Fteydea
str(Fteydea)
library(qpdf)
str(Fteydea$Info)
Fteydea$Info
Fteydea$SongDisMat
str(Marvalis$Info)
Marvalis$Info
str(Marvalis)
str(Fteydea)
Fteydea$NE.Boundary$ProvenanceRange
str(Marvalis)
str(Rpraetor)
tools::checkRdaFiles("data/Fteydea.rda")
tools::checkRdaFiles("data/Marvalis.rda")
tools::resaveRdaFiles(paths = "data/Fteydea.rda", compress = "bzip2")
tools::resaveRdaFiles(paths = "data/Marvalis.rda", compress = "bzip2")
tools::resaveRdaFiles(paths = "data/Rpraetor.rda", compress = "bzip2")
devtools::document()
devtools::load_all()
library(GeoOrigins)
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("qpdf")
Sys.getenv("qpdf") <- "/Program Files/qpdf-9.0.0/bin/"
version
Sys.getenv("qpdf")
Sys.getenv("qpdf")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("qpdf")
Sys.getenv("qpdf")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("qpdf")
Sys.getenv("qpdf")
Sys.getenv("qpdf")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
library(GeoOrigins)
devtools::check()
devtools::document()
devtools::document()
devtools::check()
c(person("Ardern", "Hulme-Beaman", email = "ardernhb@gmail.com", role = c("aut", "cre", )), person("Anna", "Rudzinski", role = c("ctb")))
devtools::document()
devtools::check()
library(GeoOrigins)
citation("GeoOrigins")
devtools::document()
citation("GeoOrigins")
devtools::document()
devtools::load_all()
man()
devtools::build_manual()
citation(devtools)
require(devtools)
citation(devtools)
citation(ks)
require(ks)
citation(ks)
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::load_all()
devtools::load_all()
Rpraetor
RatDistMat <- ProcDistanceTable(Rpraetor$LMs)
RatDistMat
help(IDbyDistance.DistInput.CCV)
IDoriginCCV <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95)
IDoriginCCV
IDoriginCCV2 <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .99)
IDoriginCCV2
which(IDoriginCCV$CCV.Cor.Vals<IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
IDoriginCCV <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95)
48*.05
help(IDbyDistance.DistInput)
Ind
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = TRUE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
Ind <- 1
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = TRUE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = TRUE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
points(x=Rpraetor$Lat.Long$Long[Ind], yRpraetor$Lat.Long$Lat[Ind], col='red', pch=16)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], col='red', pch=16)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], col='red', pch=16, cex=2)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
IDoriginCCV2
IDoriginCCV
IDoriginCCV <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .80)
IDoriginCCV
IDoriginCCV <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .95)
IDoriginCCV2 <- IDbyDistance.DistInput.CCV(Rpraetor$Lat.Long, Dist.data.mat = RatDistMat, verbose = TRUE, Prov.Confidence = .80)
Ind <- 2
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 3
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 4
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 5
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 6
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 7
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 8
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 9
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 10
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 11
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 11
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 12
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 13
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 14
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 15
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 16
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 17
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 18
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 19
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 20
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 21
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
which(IDoriginCCV$CCV.Cor.Vals<IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
Ind <- 22
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 23
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
which(IDoriginCCV$CCV.Cor.Vals<IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
Ind <- 24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 25#24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 26
#24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 27
#26, 24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 28
#26, 24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 29
#26, 24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 30
#26, 24
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 31
#26, 24, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 31
Ind <- 32
#26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 33
#32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
points(x=144, y=-4, bg='red', pch=21, cex=3)
points(x=143, y=-4, bg='red', pch=21, cex=3)
points(x=143.5, y=-4, bg='red', pch=21, cex=3)
geosphere::distHaversine(Rpraetor$Lat.Long[Ind,], c(-4,143.5))
Rpraetor$Lat.Long[Ind,]
geosphere::distHaversine(Rpraetor$Lat.Long[Ind,2:1], c(143.5,-4))
Dist33 <- geosphere::distHaversine(Rpraetor$Lat.Long[Ind,2:1], c(143.5,-4))
Ind <- 34
#32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 35
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 36
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 37
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 38
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 39
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 40
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 41
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 42
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 43
#34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 44
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 45
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 46
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 47
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
Ind <- 48
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
which(IDoriginCCV$CCV.Cor.Vals<IDoriginCCV$`Provenancing.Correlation.95%.Confidence`)
Ind <- 21
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
points(x=143.5, y=-4, bg='red', pch=21, cex=3)
points(x=143.5, y=Rpraetor$Lat.Long$Lat, bg='red', pch=21, cex=3)
points(x=143.5, y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
nearestEdgs <- c(143.5,Rpraetor$Lat.Long$Lat[Ind])
points(x=nearestEdgs[1], y=nearestEdgs[2], bg='red', pch=21, cex=3)
geosphere::distHaversine(Rpraetor$Lat.Long[Ind,2:1], nearestEdgs)
Dist21 <- geosphere::distHaversine(Rpraetor$Lat.Long[Ind,2:1], nearestEdgs)
Ind <- 22
#43, 34, 32, 26, 31, 30
IDbyDistance.DistInput(Lat.Longs = Rpraetor$Lat.Long[-Ind,], Dist.data.vec = RatDistMat[-Ind,Ind], LatRange = range(Rpraetor$Lat.Long$Lat), LongRange = range(Rpraetor$Lat.Long$Long), Range.Samp = c(10,30), Validate = FALSE, Valid.LatLongs = Rpraetor$Lat.Long[Ind,], plot.Prov = TRUE, plot.Val.cor = IDoriginCCV$`Provenancing.Correlation.95%.Confidence`, verbose = FALSE)
points(x=Rpraetor$Lat.Long$Long[Ind], y=Rpraetor$Lat.Long$Lat[Ind], bg='red', pch=21, cex=3)
nearestEdgs <- c(144,Rpraetor$Lat.Long$Lat[Ind])
points(x=nearestEdgs[1], y=nearestEdgs[2], bg='red', pch=21, cex=3)
Dist22 <- geosphere::distHaversine(Rpraetor$Lat.Long[Ind,2:1], nearestEdgs)
Dist22
Dist21
Dist21/1000
Dist22/1000
Dist33/1000
mean(Dist21/1000, Dist22/1000, Dist33/1000)
mean(Dist21/1000, Dist22/1000, Dist33/1000)
Dist21/1000
mean(c(Dist21/1000, Dist22/1000, Dist33/1000))
